{"backend_state":"running","connection_file":"/projects/32f31ee3-50e6-4896-a9de-cba73af32175/.local/share/jupyter/runtime/kernel-c1685b7e-f5aa-489c-a0cb-a4c91ca6be1c.json","kernel":"python3-ubuntu","kernel_error":"","kernel_state":"idle","trust":true,"type":"settings"}
{"end":1658867057615,"exec_count":1,"id":"0ee640","input":"import pandas as pd\nimport numpy as np","kernel":"python3-ubuntu","pos":0,"start":1658867057142,"state":"done","type":"cell"}
{"end":1658867064149,"exec_count":3,"id":"f537bd","input":"data = pd.read_csv(\"Data/Airlines.csv\")\ndata","kernel":"python3-ubuntu","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Airline</th>\n      <th>Flight</th>\n      <th>AirportFrom</th>\n      <th>AirportTo</th>\n      <th>DayOfWeek</th>\n      <th>Time</th>\n      <th>Length</th>\n      <th>Delay</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>CO</td>\n      <td>269</td>\n      <td>SFO</td>\n      <td>IAH</td>\n      <td>3</td>\n      <td>15</td>\n      <td>205</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>US</td>\n      <td>1558</td>\n      <td>PHX</td>\n      <td>CLT</td>\n      <td>3</td>\n      <td>15</td>\n      <td>222</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>AA</td>\n      <td>2400</td>\n      <td>LAX</td>\n      <td>DFW</td>\n      <td>3</td>\n      <td>20</td>\n      <td>165</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>AA</td>\n      <td>2466</td>\n      <td>SFO</td>\n      <td>DFW</td>\n      <td>3</td>\n      <td>20</td>\n      <td>195</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>AS</td>\n      <td>108</td>\n      <td>ANC</td>\n      <td>SEA</td>\n      <td>3</td>\n      <td>30</td>\n      <td>202</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>539378</th>\n      <td>539379</td>\n      <td>CO</td>\n      <td>178</td>\n      <td>OGG</td>\n      <td>SNA</td>\n      <td>5</td>\n      <td>1439</td>\n      <td>326</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>539379</th>\n      <td>539380</td>\n      <td>FL</td>\n      <td>398</td>\n      <td>SEA</td>\n      <td>ATL</td>\n      <td>5</td>\n      <td>1439</td>\n      <td>305</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>539380</th>\n      <td>539381</td>\n      <td>FL</td>\n      <td>609</td>\n      <td>SFO</td>\n      <td>MKE</td>\n      <td>5</td>\n      <td>1439</td>\n      <td>255</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>539381</th>\n      <td>539382</td>\n      <td>UA</td>\n      <td>78</td>\n      <td>HNL</td>\n      <td>SFO</td>\n      <td>5</td>\n      <td>1439</td>\n      <td>313</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>539382</th>\n      <td>539383</td>\n      <td>US</td>\n      <td>1442</td>\n      <td>LAX</td>\n      <td>PHL</td>\n      <td>5</td>\n      <td>1439</td>\n      <td>301</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>539383 rows Ã— 9 columns</p>\n</div>","text/plain":"            id Airline  Flight AirportFrom AirportTo  DayOfWeek  Time  Length  \\\n0            1      CO     269         SFO       IAH          3    15     205   \n1            2      US    1558         PHX       CLT          3    15     222   \n2            3      AA    2400         LAX       DFW          3    20     165   \n3            4      AA    2466         SFO       DFW          3    20     195   \n4            5      AS     108         ANC       SEA          3    30     202   \n...        ...     ...     ...         ...       ...        ...   ...     ...   \n539378  539379      CO     178         OGG       SNA          5  1439     326   \n539379  539380      FL     398         SEA       ATL          5  1439     305   \n539380  539381      FL     609         SFO       MKE          5  1439     255   \n539381  539382      UA      78         HNL       SFO          5  1439     313   \n539382  539383      US    1442         LAX       PHL          5  1439     301   \n\n        Delay  \n0           1  \n1           1  \n2           1  \n3           1  \n4           0  \n...       ...  \n539378      0  \n539379      0  \n539380      0  \n539381      1  \n539382      1  \n\n[539383 rows x 9 columns]"},"exec_count":3}},"pos":1,"start":1658867063383,"state":"done","type":"cell"}
{"end":1658867198892,"exec_count":6,"id":"326d1f","input":"#cleaning\ndata.drop([\"id\",],axis=1,inplace=True)","kernel":"python3-ubuntu","pos":3,"start":1658867198861,"state":"done","type":"cell"}
{"end":1658867206710,"exec_count":7,"id":"0d2c6e","input":"data.columns","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"Index(['Airline', 'Flight', 'AirportFrom', 'AirportTo', 'DayOfWeek', 'Time',\n       'Length', 'Delay'],\n      dtype='object')"},"exec_count":7}},"pos":4,"start":1658867206695,"state":"done","type":"cell"}
{"end":1658867343829,"exec_count":10,"id":"4c39a7","input":"data.reset_index(drop=True, inplace=True)","kernel":"python3-ubuntu","pos":5,"start":1658867343823,"state":"done","type":"cell"}
{"end":1658867360667,"exec_count":11,"id":"f84db4","input":"data.dropna(inplace=True)","kernel":"python3-ubuntu","pos":6,"start":1658867360392,"state":"done","type":"cell"}
{"end":1658867369742,"exec_count":12,"id":"a61dc4","input":"data.index","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"RangeIndex(start=0, stop=539383, step=1)"},"exec_count":12}},"pos":7,"start":1658867369736,"state":"done","type":"cell"}
{"end":1658867908517,"exec_count":15,"id":"f0b6a6","input":"import sklearn\nfrom sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(input_columns, target, test_size=0.2)","kernel":"python3-ubuntu","pos":9,"start":1658867908220,"state":"done","type":"cell"}
{"exec_count":13,"id":"216070","input":"target = data[\"Delay\"]\ninput_columns = data.loc[:, data.columns != \"Delay\"]","kernel":"python3-ubuntu","pos":8,"state":"done","type":"cell"}
{"exec_count":16,"id":"bfc0e9","input":"from sklearn import svm\nfrom sklearn.svm import SVC\n\n#Change kernel?\nclf = svm.SVC()","kernel":"python3-ubuntu","pos":10,"state":"done","type":"cell"}
{"exec_count":4,"id":"46288c","input":"data.info","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"<bound method DataFrame.info of             id Airline  Flight AirportFrom AirportTo  DayOfWeek  Time  Length  \\\n0            1      CO     269         SFO       IAH          3    15     205   \n1            2      US    1558         PHX       CLT          3    15     222   \n2            3      AA    2400         LAX       DFW          3    20     165   \n3            4      AA    2466         SFO       DFW          3    20     195   \n4            5      AS     108         ANC       SEA          3    30     202   \n...        ...     ...     ...         ...       ...        ...   ...     ...   \n539378  539379      CO     178         OGG       SNA          5  1439     326   \n539379  539380      FL     398         SEA       ATL          5  1439     305   \n539380  539381      FL     609         SFO       MKE          5  1439     255   \n539381  539382      UA      78         HNL       SFO          5  1439     313   \n539382  539383      US    1442         LAX       PHL          5  1439     301   \n\n        Delay  \n0           1  \n1           1  \n2           1  \n3           1  \n4           0  \n...       ...  \n539378      0  \n539379      0  \n539380      0  \n539381      1  \n539382      1  \n\n[539383 rows x 9 columns]>"},"exec_count":4}},"pos":2,"state":"done","type":"cell"}
{"id":"4d07f7","input":"total_square_error = np.sum((y_test - y_pred)**2)\nmean_square_error = total_square_error/len(y_test)\nmean_square_error","pos":13,"type":"cell"}
{"id":"5d4a0e","input":"clf.fit(x_train, y_train) #train","pos":11,"type":"cell"}
{"id":"652b47","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='g')","pos":14,"type":"cell"}
{"id":"79376d","input":"y_pred = clf.predict(x_test) #predict","pos":12,"type":"cell"}
{"last_load":1658866712506,"type":"file"}