{"backend_state":"running","connection_file":"/projects/32f31ee3-50e6-4896-a9de-cba73af32175/.local/share/jupyter/runtime/kernel-39624358-b126-4e47-a26e-085057c4bfca.json","kernel":"python3-ubuntu","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1658523201139,"exec_count":6,"id":"2070b8","input":"import pandas as pd\nimport plotly.express as px\ndata = pd.read_csv(\"./Data/Airlines.csv\")\ndata.drop('id', axis=1, inplace=True)\ndf = data[['AirportFrom','Delay']].groupby('AirportFrom').agg('count').reset_index()\ndf.head(293)","kernel":"python3-ubuntu","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>AirportFrom</th>\n      <th>Delay</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>ABE</td>\n      <td>342</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ABI</td>\n      <td>211</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ABQ</td>\n      <td>2799</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>ABR</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>ABY</td>\n      <td>87</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>288</th>\n      <td>VPS</td>\n      <td>633</td>\n    </tr>\n    <tr>\n      <th>289</th>\n      <td>WRG</td>\n      <td>59</td>\n    </tr>\n    <tr>\n      <th>290</th>\n      <td>XNA</td>\n      <td>1128</td>\n    </tr>\n    <tr>\n      <th>291</th>\n      <td>YAK</td>\n      <td>57</td>\n    </tr>\n    <tr>\n      <th>292</th>\n      <td>YUM</td>\n      <td>338</td>\n    </tr>\n  </tbody>\n</table>\n<p>293 rows × 2 columns</p>\n</div>","text/plain":"    AirportFrom  Delay\n0           ABE    342\n1           ABI    211\n2           ABQ   2799\n3           ABR      2\n4           ABY     87\n..          ...    ...\n288         VPS    633\n289         WRG     59\n290         XNA   1128\n291         YAK     57\n292         YUM    338\n\n[293 rows x 2 columns]"},"exec_count":6}},"pos":7,"start":1658523200481,"state":"done","type":"cell"}
{"cell_type":"code","end":1658527274305,"exec_count":14,"id":"f4b323","input":"# df = px.data.gapminder().query(\"year==2007\")\nairports_coordinates = pd.read_csv(\"./Data/Airport Coordinates.csv\")\n# merged = airlines.merge(right = airports_coordinates, how = 'left', left_on = 'AirportFrom', right_on = 'IATA')\n# fig = px.scatter_geo(airports_coordinates, locations=\"iso_alpha\",hover_name=\"AIRPORT\", size=\"DELAY\",projection=\"natural earth\")\n\nimport plotly.graph_objects as go\n\nimport pandas as pd\n\ndf = pd.read_csv(\"./Data/Airport Coordinates.csv\")\ndf['text'] = df['IATA'] + ',' + df['AIRPORT'] + ',' + df['DELAY'].astype(str)\n# IATA,AIRPORT,LATITUDE,LONGITUDE,DELAY ',' + df['LATITUTE'] + ',' + df['LONGITUDE'] +\n\nfig = go.Figure(data=go.Scattergeo(\n        lon = df['LONGITUDE'],\n        lat = df['LATITUDE'],\n        text = df['text'],\n        mode = 'markers',\n        marker_color = df['DELAY'],\n        ))\n\nfig.update_layout(\n        title = 'Highest Delayed Airports (United States)',\n        geo_scope='usa',\n    )\nfig.show()","kernel":"python3-ubuntu","output":{"0":{"data":{"iframe":"c3bbfcd850206027ec7f3f2d72e3f0c750fc2390"}}},"pos":11,"start":1658527274254,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"a9b664","input":"","pos":14,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"e36ee3","input":"columns_to_drop = ['id']\n\n#Drop the columns using drop()\nairlines.drop(columns_to_drop, axis=1, inplace = True)","pos":5,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"52d284","input":"airlines_df = airlines[['Airline','Flight','AirportFrom','AirportTo','DayOfWeek','Time','Length','Delay']]\nfig = px.scatter_matrix(airlines,dimensions=['Airline','Flight','AirportFrom','AirportTo','DayOfWeek','Time','Length','Delay'],color=\"Delay\")\n# fig = px.scatter_matrix(airlines,dimensions=['AirportFrom','Delay'],color=\"Airline\")\n# fig = px.scatter_matrix(airlines_df)\nfig.update_traces(diagonal_visible=False)\nfig.show()","output":{"0":{"data":{"iframe":"d950cff1fc04d62706fc95baec5bbb1142b4ac10"},"exec_count":23,"output_type":"execute_result"}},"pos":9,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":32,"id":"6f407f","input":"airlines","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Airline</th>\n      <th>Flight</th>\n      <th>AirportFrom</th>\n      <th>AirportTo</th>\n      <th>DayOfWeek</th>\n      <th>Time</th>\n      <th>Length</th>\n      <th>Delay</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>CO</td>\n      <td>269</td>\n      <td>SFO</td>\n      <td>IAH</td>\n      <td>3</td>\n      <td>15</td>\n      <td>205</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>US</td>\n      <td>1558</td>\n      <td>PHX</td>\n      <td>CLT</td>\n      <td>3</td>\n      <td>15</td>\n      <td>222</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>AA</td>\n      <td>2400</td>\n      <td>LAX</td>\n      <td>DFW</td>\n      <td>3</td>\n      <td>20</td>\n      <td>165</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>AA</td>\n      <td>2466</td>\n      <td>SFO</td>\n      <td>DFW</td>\n      <td>3</td>\n      <td>20</td>\n      <td>195</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>AS</td>\n      <td>108</td>\n      <td>ANC</td>\n      <td>SEA</td>\n      <td>3</td>\n      <td>30</td>\n      <td>202</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>539378</th>\n      <td>CO</td>\n      <td>178</td>\n      <td>OGG</td>\n      <td>SNA</td>\n      <td>5</td>\n      <td>1439</td>\n      <td>326</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>539379</th>\n      <td>FL</td>\n      <td>398</td>\n      <td>SEA</td>\n      <td>ATL</td>\n      <td>5</td>\n      <td>1439</td>\n      <td>305</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>539380</th>\n      <td>FL</td>\n      <td>609</td>\n      <td>SFO</td>\n      <td>MKE</td>\n      <td>5</td>\n      <td>1439</td>\n      <td>255</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>539381</th>\n      <td>UA</td>\n      <td>78</td>\n      <td>HNL</td>\n      <td>SFO</td>\n      <td>5</td>\n      <td>1439</td>\n      <td>313</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>539382</th>\n      <td>US</td>\n      <td>1442</td>\n      <td>LAX</td>\n      <td>PHL</td>\n      <td>5</td>\n      <td>1439</td>\n      <td>301</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>539383 rows × 8 columns</p>\n</div>","text/plain":"       Airline  Flight AirportFrom AirportTo  DayOfWeek  Time  Length  Delay\n0           CO     269         SFO       IAH          3    15     205      1\n1           US    1558         PHX       CLT          3    15     222      1\n2           AA    2400         LAX       DFW          3    20     165      1\n3           AA    2466         SFO       DFW          3    20     195      1\n4           AS     108         ANC       SEA          3    30     202      0\n...        ...     ...         ...       ...        ...   ...     ...    ...\n539378      CO     178         OGG       SNA          5  1439     326      0\n539379      FL     398         SEA       ATL          5  1439     305      0\n539380      FL     609         SFO       MKE          5  1439     255      0\n539381      UA      78         HNL       SFO          5  1439     313      1\n539382      US    1442         LAX       PHL          5  1439     301      1\n\n[539383 rows x 8 columns]"},"exec_count":32,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":41,"id":"32be32","input":"# fig = px.scatter(penguins_dataframe, x=\"Body Mass (g)\", y=\"Flipper Length (mm)\")\n\n# fig.show()\n\nairlines\n\nairports_coordinates\n\n# merged = airlines.merge(right = airports_coordinates, how = 'left', left_on = 'AirportFrom', right_on = 'IATA')\n# merged","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Airline</th>\n      <th>Flight</th>\n      <th>AirportFrom</th>\n      <th>AirportTo</th>\n      <th>DayOfWeek</th>\n      <th>Time</th>\n      <th>Length</th>\n      <th>Delay</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>CO</td>\n      <td>269</td>\n      <td>SFO</td>\n      <td>IAH</td>\n      <td>3</td>\n      <td>15</td>\n      <td>205</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>US</td>\n      <td>1558</td>\n      <td>PHX</td>\n      <td>CLT</td>\n      <td>3</td>\n      <td>15</td>\n      <td>222</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>AA</td>\n      <td>2400</td>\n      <td>LAX</td>\n      <td>DFW</td>\n      <td>3</td>\n      <td>20</td>\n      <td>165</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>AA</td>\n      <td>2466</td>\n      <td>SFO</td>\n      <td>DFW</td>\n      <td>3</td>\n      <td>20</td>\n      <td>195</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>AS</td>\n      <td>108</td>\n      <td>ANC</td>\n      <td>SEA</td>\n      <td>3</td>\n      <td>30</td>\n      <td>202</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>539378</th>\n      <td>539379</td>\n      <td>CO</td>\n      <td>178</td>\n      <td>OGG</td>\n      <td>SNA</td>\n      <td>5</td>\n      <td>1439</td>\n      <td>326</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>539379</th>\n      <td>539380</td>\n      <td>FL</td>\n      <td>398</td>\n      <td>SEA</td>\n      <td>ATL</td>\n      <td>5</td>\n      <td>1439</td>\n      <td>305</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>539380</th>\n      <td>539381</td>\n      <td>FL</td>\n      <td>609</td>\n      <td>SFO</td>\n      <td>MKE</td>\n      <td>5</td>\n      <td>1439</td>\n      <td>255</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>539381</th>\n      <td>539382</td>\n      <td>UA</td>\n      <td>78</td>\n      <td>HNL</td>\n      <td>SFO</td>\n      <td>5</td>\n      <td>1439</td>\n      <td>313</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>539382</th>\n      <td>539383</td>\n      <td>US</td>\n      <td>1442</td>\n      <td>LAX</td>\n      <td>PHL</td>\n      <td>5</td>\n      <td>1439</td>\n      <td>301</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>539383 rows × 9 columns</p>\n</div>","text/plain":"            id Airline  Flight AirportFrom AirportTo  DayOfWeek  Time  Length  \\\n0            1      CO     269         SFO       IAH          3    15     205   \n1            2      US    1558         PHX       CLT          3    15     222   \n2            3      AA    2400         LAX       DFW          3    20     165   \n3            4      AA    2466         SFO       DFW          3    20     195   \n4            5      AS     108         ANC       SEA          3    30     202   \n...        ...     ...     ...         ...       ...        ...   ...     ...   \n539378  539379      CO     178         OGG       SNA          5  1439     326   \n539379  539380      FL     398         SEA       ATL          5  1439     305   \n539380  539381      FL     609         SFO       MKE          5  1439     255   \n539381  539382      UA      78         HNL       SFO          5  1439     313   \n539382  539383      US    1442         LAX       PHL          5  1439     301   \n\n        Delay  \n0           1  \n1           1  \n2           1  \n3           1  \n4           0  \n...       ...  \n539378      0  \n539379      0  \n539380      0  \n539381      1  \n539382      1  \n\n[539383 rows x 9 columns]"},"exec_count":41,"output_type":"execute_result"}},"pos":4,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":44,"id":"c41ba2","input":"import matplotlib.pyplot as plt\n\nairports_coordinates = pd.read_csv(\"./Data/Airport_Coordinates.csv\")\nfig, ax = plt.subplots(facecolor='#FCF6F5FF')\nfig.set_size_inches(10, 5)\n\nax.scatter(airports_coordinates['LONGITUDE'], airports_coordinates['LATITUDE'], s=1, alpha=1, edgecolors='none')\nax.axis('off')\n\nplt.show()","output":{"0":{"data":{"image/png":"463fdaa5ce6b095ad1f30fc8dd4c44b251a60896","text/plain":"<Figure size 720x360 with 1 Axes>"},"exec_count":44,"metadata":{"image/png":{"height":286,"width":572}},"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":48,"id":"d713cb","input":"import pandas as pd","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":49,"id":"4c7f3f","input":"import plotly.express as px","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":50,"id":"48dccc","input":"import matplotlib.pyplot as plt\nimport seaborn as sns","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":51,"id":"f78080","input":"airlines = pd.read_csv(\"./Data/Airlines.csv\")\n\nairports_coordinates = pd.read_csv(\"./Data/Airport_Coordinates.csv\")","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":59,"id":"eaa9ff","input":"# airlines[\"AirportFrom\"].drop_duplicates()\n\n# airlines[[\"AirportFrom\",\"Delay\"]].head(293)\n\n# airlines.plot.scatter(x='AirportFrom',y='Delay')\n\nfig = px.scatter(airlines, x=\"AirportFrom\", y=\"Delay\")\n\nfig.show()","output":{"0":{"data":{"iframe":"df1a3793bf01e35e8d416de931002067fd9a0a3c"},"exec_count":59,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"8d589c","input":"airlines.AirportFrom.hist()","output":{"0":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7f4eab35e790>"},"exec_count":8,"output_type":"execute_result"},"1":{"data":{"image/png":"7a4db46082b7c12103bb3a16e341e2fc31f13279","text/plain":"<Figure size 864x504 with 1 Axes>"},"exec_count":8,"metadata":{"image/png":{"height":411,"width":729},"needs_background":"light"},"output_type":"execute_result"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"f3ff7d","input":"airlines.plot.scatter(x='AirportFrom',y='Delay')","output":{"0":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7f4eab12a730>"},"exec_count":9,"output_type":"execute_result"},"1":{"data":{"image/png":"152264042ef52da6f4155bdc1278fcf7d94d57b3","text/plain":"<Figure size 864x504 with 1 Axes>"},"exec_count":9,"metadata":{"image/png":{"height":424,"width":720},"needs_background":"light"},"output_type":"execute_result"}},"pos":13,"type":"cell"}
{"id":0,"time":1658526865243,"type":"user"}
{"last_load":1658520149659,"type":"file"}